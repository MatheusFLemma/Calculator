$dark-grey: #4C4C4E;
$light-grey: #5D5E60;
$light-grey-hover: rgba(93, 94, 96, .1);
$orange: #FD9E2A;
$orange-hover: rgba(253, 158, 42, .8);
$white: #E9E8ED;

$bold: 700;
$font: 'Open Sans', sans-serif;
$regular: 400;

@mixin rem($property, $value) {
  #{$property}: ($value / 16) + rem;
}

@mixin resultPadding($top, $horizontal, $bottom) {
  padding: ($top / 16) + rem
           ($horizontal / 16) + rem
           ($bottom / 16) + rem;
}

@mixin buttonRadius($topL, $topR, $bottomR, $bottomL) {
  border-radius: ($topL / 16) + rem
                 ($topR / 16) + rem
                 ($bottomR / 16) + rem
                 ($bottomL / 16) + rem;
}

*,
*:after,
*:before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html,
body {
  font-family: $font;
}

button[type="button"] {
  border: none;
  cursor: pointer;
}

.container {
  align-items: center;
  display: flex;
  justify-content: center;
  height: 100vh;
  width: 100vw;
}

.grid {
  @include rem(gap, 2);

  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(5, 1fr);

  .zero {
    @include buttonRadius(0, 0, 0, 20);
    grid-column: 1 / 3;
  }

  #equal {
    @include buttonRadius(0, 0, 20, 0);
  }
}